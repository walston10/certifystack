{"ast":null,"code":"// ============================================\n// QUIZ INDEX - Network+ N10-009\n// ============================================\n// Central export file for all lesson quizzes\n\n// Import quiz modules (needed for helper functions)\nimport { lesson1Quiz } from './lesson-01-quiz';\nimport { lesson2Quiz } from './lesson-02-quiz';\n\n// Re-export quizzes for direct imports\nexport { lesson1Quiz } from './lesson-01-quiz';\nexport { lesson2Quiz } from './lesson-02-quiz';\n// export { lesson3Quiz } from './lesson-03-quiz';\n// export { lesson4Quiz } from './lesson-04-quiz';\n// ... add more as you create them\n\n// ============================================\n// QUIZ REGISTRY (for dynamic loading by lesson number)\n// ============================================\n\nconst allQuizzes = {\n  1: lesson1Quiz,\n  2: lesson2Quiz,\n  3: lesson3Quiz,\n  4: lesson4Quiz,\n  5: lesson5Quiz,\n  6: lesson6Quiz\n};\n\n// ============================================\n// HELPER FUNCTIONS (used by QuizActivity component)\n// ============================================\n\n/**\r\n * Get quiz by lesson number\r\n * @param {number} lessonNumber - The lesson number (1-30)\r\n * @returns {Array|null} Quiz questions array or null if not found\r\n */\nexport function getQuizByLesson(lessonNumber) {\n  return allQuizzes[lessonNumber] || null;\n}\n\n/**\r\n * Check if a quiz exists for a lesson\r\n * @param {number} lessonNumber - The lesson number (1-30)\r\n * @returns {boolean} True if quiz exists\r\n */\nexport function hasQuiz(lessonNumber) {\n  return !!allQuizzes[lessonNumber];\n}\n\n/**\r\n * Get all available quiz lesson numbers\r\n * @returns {Array<number>} Array of lesson numbers that have quizzes\r\n */\nexport function getAvailableQuizzes() {\n  return Object.keys(allQuizzes).map(Number).sort((a, b) => a - b);\n}","map":{"version":3,"names":["lesson1Quiz","lesson2Quiz","allQuizzes","lesson3Quiz","lesson4Quiz","lesson5Quiz","lesson6Quiz","getQuizByLesson","lessonNumber","hasQuiz","getAvailableQuizzes","Object","keys","map","Number","sort","a","b"],"sources":["C:/Users/Owner/certifystack/src/data/courses/network-plus/quizzes/index.js"],"sourcesContent":["// ============================================\r\n// QUIZ INDEX - Network+ N10-009\r\n// ============================================\r\n// Central export file for all lesson quizzes\r\n\r\n// Import quiz modules (needed for helper functions)\r\nimport { lesson1Quiz } from './lesson-01-quiz';\r\nimport { lesson2Quiz } from './lesson-02-quiz';\r\n\r\n// Re-export quizzes for direct imports\r\nexport { lesson1Quiz } from './lesson-01-quiz';\r\nexport { lesson2Quiz } from './lesson-02-quiz';\r\n// export { lesson3Quiz } from './lesson-03-quiz';\r\n// export { lesson4Quiz } from './lesson-04-quiz';\r\n// ... add more as you create them\r\n\r\n// ============================================\r\n// QUIZ REGISTRY (for dynamic loading by lesson number)\r\n// ============================================\r\n\r\nconst allQuizzes = {\r\n  1: lesson1Quiz,\r\n  2: lesson2Quiz,\r\n  3: lesson3Quiz,\r\n  4: lesson4Quiz,\r\n  5: lesson5Quiz,\r\n  6: lesson6Quiz,\r\n};\r\n\r\n// ============================================\r\n// HELPER FUNCTIONS (used by QuizActivity component)\r\n// ============================================\r\n\r\n/**\r\n * Get quiz by lesson number\r\n * @param {number} lessonNumber - The lesson number (1-30)\r\n * @returns {Array|null} Quiz questions array or null if not found\r\n */\r\nexport function getQuizByLesson(lessonNumber) {\r\n  return allQuizzes[lessonNumber] || null;\r\n}\r\n\r\n/**\r\n * Check if a quiz exists for a lesson\r\n * @param {number} lessonNumber - The lesson number (1-30)\r\n * @returns {boolean} True if quiz exists\r\n */\r\nexport function hasQuiz(lessonNumber) {\r\n  return !!allQuizzes[lessonNumber];\r\n}\r\n\r\n/**\r\n * Get all available quiz lesson numbers\r\n * @returns {Array<number>} Array of lesson numbers that have quizzes\r\n */\r\nexport function getAvailableQuizzes() {\r\n  return Object.keys(allQuizzes).map(Number).sort((a, b) => a - b);\r\n}"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,WAAW,QAAQ,kBAAkB;;AAE9C;AACA,SAASD,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,WAAW,QAAQ,kBAAkB;AAC9C;AACA;AACA;;AAEA;AACA;AACA;;AAEA,MAAMC,UAAU,GAAG;EACjB,CAAC,EAAEF,WAAW;EACd,CAAC,EAAEC,WAAW;EACd,CAAC,EAAEE,WAAW;EACd,CAAC,EAAEC,WAAW;EACd,CAAC,EAAEC,WAAW;EACd,CAAC,EAAEC;AACL,CAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,eAAeA,CAACC,YAAY,EAAE;EAC5C,OAAON,UAAU,CAACM,YAAY,CAAC,IAAI,IAAI;AACzC;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,OAAOA,CAACD,YAAY,EAAE;EACpC,OAAO,CAAC,CAACN,UAAU,CAACM,YAAY,CAAC;AACnC;;AAEA;AACA;AACA;AACA;AACA,OAAO,SAASE,mBAAmBA,CAAA,EAAG;EACpC,OAAOC,MAAM,CAACC,IAAI,CAACV,UAAU,CAAC,CAACW,GAAG,CAACC,MAAM,CAAC,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,GAAGC,CAAC,CAAC;AAClE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}