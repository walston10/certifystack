{"ast":null,"code":"// ============================================\n// FLASHCARD INDEX - Network+ N10-009\n// ============================================\n// Central export file for all lesson flashcards\n\n// Import individual flashcard modules\nimport { lesson1Flashcards } from './lesson-01-flashcards';\nimport { lesson2Flashcards } from './lesson-02-flashcards';\nimport { lesson3Flashcards } from './lesson-03-flashcards';\nimport { lesson4Flashcards } from './lesson-04-flashcards';\nimport { lesson5Flashcards } from './lesson-05-flashcards';\nimport { lesson6Flashcards } from './lesson-06-flashcards';\nimport { networkPlusLessons } from '../lessons';\n\n// ... import more as they are created\n\n// Registry of all flashcards\nconst allFlashcards = {\n  1: lesson1Flashcards,\n  2: lesson2Flashcards,\n  3: lesson3Flashcards,\n  4: lesson4Flashcards,\n  5: lesson5Flashcards,\n  6: lesson6Flashcards\n  // 3: lesson3Flashcards, // Example for next lesson\n};\n\n// Helper function to get flashcards by lesson number\nexport function getFlashcardsByLesson(lessonNumber) {\n  return allFlashcards[lessonNumber] || [];\n}\n\n/**\r\n * Get a list of all lessons that have flashcards\r\n * @returns {Array<{id: number, title: string, cardCount: number}>}\r\n */\nexport function getLessonsWithFlashcards() {\n  return Object.keys(allFlashcards).map(id => {\n    const lessonId = parseInt(id);\n    const lesson = networkPlusLessons.find(l => l.id === lessonId);\n    const cards = allFlashcards[lessonId];\n    return {\n      id: lessonId,\n      title: (lesson === null || lesson === void 0 ? void 0 : lesson.title) || `Lesson ${lessonId}`,\n      cardCount: cards.length\n    };\n  }).sort((a, b) => a.id - b.id);\n}","map":{"version":3,"names":["lesson1Flashcards","lesson2Flashcards","lesson3Flashcards","lesson4Flashcards","lesson5Flashcards","lesson6Flashcards","networkPlusLessons","allFlashcards","getFlashcardsByLesson","lessonNumber","getLessonsWithFlashcards","Object","keys","map","id","lessonId","parseInt","lesson","find","l","cards","title","cardCount","length","sort","a","b"],"sources":["C:/Users/Owner/certifystack/src/data/courses/network-plus/flashcards/index.js"],"sourcesContent":["// ============================================\r\n// FLASHCARD INDEX - Network+ N10-009\r\n// ============================================\r\n// Central export file for all lesson flashcards\r\n\r\n// Import individual flashcard modules\r\nimport { lesson1Flashcards } from './lesson-01-flashcards';\r\nimport { lesson2Flashcards } from './lesson-02-flashcards';\r\nimport { lesson3Flashcards } from './lesson-03-flashcards';\r\nimport { lesson4Flashcards } from './lesson-04-flashcards';\r\nimport { lesson5Flashcards } from './lesson-05-flashcards';\r\nimport { lesson6Flashcards } from './lesson-06-flashcards';\r\nimport { networkPlusLessons } from '../lessons';\r\n\r\n\r\n// ... import more as they are created\r\n\r\n// Registry of all flashcards\r\nconst allFlashcards = {\r\n  1: lesson1Flashcards,\r\n  2: lesson2Flashcards,\r\n  3: lesson3Flashcards,\r\n  4: lesson4Flashcards,\r\n  5: lesson5Flashcards,\r\n  6: lesson6Flashcards\r\n  // 3: lesson3Flashcards, // Example for next lesson\r\n};\r\n\r\n// Helper function to get flashcards by lesson number\r\nexport function getFlashcardsByLesson(lessonNumber) {\r\n  return allFlashcards[lessonNumber] || [];\r\n}\r\n\r\n/**\r\n * Get a list of all lessons that have flashcards\r\n * @returns {Array<{id: number, title: string, cardCount: number}>}\r\n */\r\nexport function getLessonsWithFlashcards() {\r\n  return Object.keys(allFlashcards).map(id => {\r\n    const lessonId = parseInt(id);\r\n    const lesson = networkPlusLessons.find(l => l.id === lessonId);\r\n    const cards = allFlashcards[lessonId];\r\n    \r\n    return { id: lessonId, title: lesson?.title || `Lesson ${lessonId}`, cardCount: cards.length };\r\n  }).sort((a, b) => a.id - b.id);\r\n}"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA,SAASA,iBAAiB,QAAQ,wBAAwB;AAC1D,SAASC,iBAAiB,QAAQ,wBAAwB;AAC1D,SAASC,iBAAiB,QAAQ,wBAAwB;AAC1D,SAASC,iBAAiB,QAAQ,wBAAwB;AAC1D,SAASC,iBAAiB,QAAQ,wBAAwB;AAC1D,SAASC,iBAAiB,QAAQ,wBAAwB;AAC1D,SAASC,kBAAkB,QAAQ,YAAY;;AAG/C;;AAEA;AACA,MAAMC,aAAa,GAAG;EACpB,CAAC,EAAEP,iBAAiB;EACpB,CAAC,EAAEC,iBAAiB;EACpB,CAAC,EAAEC,iBAAiB;EACpB,CAAC,EAAEC,iBAAiB;EACpB,CAAC,EAAEC,iBAAiB;EACpB,CAAC,EAAEC;EACH;AACF,CAAC;;AAED;AACA,OAAO,SAASG,qBAAqBA,CAACC,YAAY,EAAE;EAClD,OAAOF,aAAa,CAACE,YAAY,CAAC,IAAI,EAAE;AAC1C;;AAEA;AACA;AACA;AACA;AACA,OAAO,SAASC,wBAAwBA,CAAA,EAAG;EACzC,OAAOC,MAAM,CAACC,IAAI,CAACL,aAAa,CAAC,CAACM,GAAG,CAACC,EAAE,IAAI;IAC1C,MAAMC,QAAQ,GAAGC,QAAQ,CAACF,EAAE,CAAC;IAC7B,MAAMG,MAAM,GAAGX,kBAAkB,CAACY,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACL,EAAE,KAAKC,QAAQ,CAAC;IAC9D,MAAMK,KAAK,GAAGb,aAAa,CAACQ,QAAQ,CAAC;IAErC,OAAO;MAAED,EAAE,EAAEC,QAAQ;MAAEM,KAAK,EAAE,CAAAJ,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEI,KAAK,KAAI,UAAUN,QAAQ,EAAE;MAAEO,SAAS,EAAEF,KAAK,CAACG;IAAO,CAAC;EAChG,CAAC,CAAC,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACX,EAAE,GAAGY,CAAC,CAACZ,EAAE,CAAC;AAChC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}